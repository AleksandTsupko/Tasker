{"ast":null,"code":"var _JSON$parse;\n\nimport { CREATE_BOARD, DELETE_BOARD, INIT_BOARDS, RENAME_BOARD } from '../actionTypes/ActionTypes';\nconst boardList = (_JSON$parse = JSON.parse(localStorage.getItem('boards'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\nconst initialState = {\n  boards: boardList\n}; // eslint-disable-next-line default-param-last\n\nfunction boards() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INIT_BOARDS:\n      return { ...state,\n        boards: action.payload\n      };\n\n    case CREATE_BOARD:\n      return { ...state,\n        boards: [...state.boards, {\n          title: 'New board',\n          id: action.payload\n        }]\n      };\n\n    case DELETE_BOARD:\n      {\n        const newBoards = state.boards.filter(item => item.id !== action.payload);\n        return { ...state,\n          boards: newBoards\n        };\n      }\n\n    case RENAME_BOARD:\n      {\n        const copyBoards = state.boards.map(item => {\n          if (item.id === action.payload.id) {\n            // eslint-disable-next-line no-param-reassign\n            item.title = action.payload.title;\n          }\n\n          return item;\n        });\n        return { ...state,\n          boards: copyBoards\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default boards;","map":{"version":3,"names":["CREATE_BOARD","DELETE_BOARD","INIT_BOARDS","RENAME_BOARD","boardList","JSON","parse","localStorage","getItem","initialState","boards","state","action","type","payload","title","id","newBoards","filter","item","copyBoards","map"],"sources":["/home/aleksandr/Tasker/src/redux/reducers/boards.js"],"sourcesContent":["import {\n  CREATE_BOARD, DELETE_BOARD, INIT_BOARDS, RENAME_BOARD,\n} from '../actionTypes/ActionTypes';\n\nconst boardList = JSON.parse(localStorage.getItem('boards')) ?? [];\n\nconst initialState = {\n  boards: boardList,\n};\n\n// eslint-disable-next-line default-param-last\nfunction boards(state = initialState, action) {\n  switch (action.type) {\n    case INIT_BOARDS:\n      return {\n        ...state, boards: action.payload,\n      };\n    case CREATE_BOARD:\n      return {\n        ...state, boards: [...state.boards, { title: 'New board', id: action.payload }],\n      };\n    case DELETE_BOARD: {\n      const newBoards = state.boards.filter((item) => item.id !== action.payload);\n      return {\n        ...state, boards: newBoards,\n      };\n    }\n    case RENAME_BOARD: {\n      const copyBoards = state.boards.map((item) => {\n        if (item.id === action.payload.id) {\n          // eslint-disable-next-line no-param-reassign\n          item.title = action.payload.title;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        boards: copyBoards,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default boards;\n"],"mappings":";;AAAA,SACEA,YADF,EACgBC,YADhB,EAC8BC,WAD9B,EAC2CC,YAD3C,QAEO,4BAFP;AAIA,MAAMC,SAAS,kBAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAH,qDAAiD,EAAhE;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAEN;AADW,CAArB,C,CAIA;;AACA,SAASM,MAAT,GAA8C;EAAA,IAA9BC,KAA8B,uEAAtBF,YAAsB;EAAA,IAARG,MAAQ;;EAC5C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKX,WAAL;MACE,OAAO,EACL,GAAGS,KADE;QACKD,MAAM,EAAEE,MAAM,CAACE;MADpB,CAAP;;IAGF,KAAKd,YAAL;MACE,OAAO,EACL,GAAGW,KADE;QACKD,MAAM,EAAE,CAAC,GAAGC,KAAK,CAACD,MAAV,EAAkB;UAAEK,KAAK,EAAE,WAAT;UAAsBC,EAAE,EAAEJ,MAAM,CAACE;QAAjC,CAAlB;MADb,CAAP;;IAGF,KAAKb,YAAL;MAAmB;QACjB,MAAMgB,SAAS,GAAGN,KAAK,CAACD,MAAN,CAAaQ,MAAb,CAAqBC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYJ,MAAM,CAACE,OAAjD,CAAlB;QACA,OAAO,EACL,GAAGH,KADE;UACKD,MAAM,EAAEO;QADb,CAAP;MAGD;;IACD,KAAKd,YAAL;MAAmB;QACjB,MAAMiB,UAAU,GAAGT,KAAK,CAACD,MAAN,CAAaW,GAAb,CAAkBF,IAAD,IAAU;UAC5C,IAAIA,IAAI,CAACH,EAAL,KAAYJ,MAAM,CAACE,OAAP,CAAeE,EAA/B,EAAmC;YACjC;YACAG,IAAI,CAACJ,KAAL,GAAaH,MAAM,CAACE,OAAP,CAAeC,KAA5B;UACD;;UACD,OAAOI,IAAP;QACD,CANkB,CAAnB;QAOA,OAAO,EACL,GAAGR,KADE;UAELD,MAAM,EAAEU;QAFH,CAAP;MAID;;IACD;MACE,OAAOT,KAAP;EA7BJ;AA+BD;;AAED,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}