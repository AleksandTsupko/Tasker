{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/Tasker/src/components/TasksList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { Typography } from '@mui/material';\nimport { useEffect } from 'react';\nimport Task from './Task.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TasksList(_ref) {\n  _s();\n\n  let {\n    boardId\n  } = _ref;\n  const tasks = useSelector(state => state.tasks.tasks).filter(item => item.boardId === boardId);\n  const allTasks = useSelector(state => state.tasks.tasks);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(allTasks));\n  }, [allTasks]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Create your first task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), tasks.map(item => /*#__PURE__*/_jsxDEV(Task, {\n      id: item.id,\n      boardId: item.boardId,\n      title: item.title,\n      description: item.description\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(TasksList, \"V/3gY60kKBW0dSY4ngG6kz60zNI=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = TasksList;\nexport default TasksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"names":["useSelector","Typography","useEffect","Task","TasksList","boardId","tasks","state","filter","item","allTasks","localStorage","setItem","JSON","stringify","length","map","id","title","description"],"sources":["/home/aleksandr/Tasker/src/components/TasksList.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { Typography } from '@mui/material';\nimport { useEffect } from 'react';\nimport Task from './Task.jsx';\n\nfunction TasksList({ boardId }) {\n  const tasks = useSelector((state) => state.tasks.tasks).filter(\n    (item) => item.boardId === boardId,\n  );\n\n  const allTasks = useSelector((state) => state.tasks.tasks);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(allTasks));\n  }, [allTasks]);\n\n  return (\n    <>\n      {tasks.length > 0 ? (\n        <Typography variant='h6'>Tasks:</Typography>\n      ) : (\n        <Typography variant='h6'>Create your first task\n        </Typography>\n      )}\n      {tasks.map((item) => (\n        <Task\n          id={item.id}\n          boardId={item.boardId}\n          title={item.title}\n          description={item.description}\n          key={item.id}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default TasksList;\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;;AAEA,SAASC,SAAT,OAAgC;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC9B,MAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAX,CAA0CE,MAA1C,CACXC,IAAD,IAAUA,IAAI,CAACJ,OAAL,KAAiBA,OADf,CAAd;EAIA,MAAMK,QAAQ,GAAGV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAA5B;EAEAJ,SAAS,CAAC,MAAM;IACdS,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA9B;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;EAIA,oBACE;IAAA,WACGJ,KAAK,CAACS,MAAN,GAAe,CAAf,gBACC,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAGC,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,EAOGT,KAAK,CAACU,GAAN,CAAWP,IAAD,iBACT,QAAC,IAAD;MACE,EAAE,EAAEA,IAAI,CAACQ,EADX;MAEE,OAAO,EAAER,IAAI,CAACJ,OAFhB;MAGE,KAAK,EAAEI,IAAI,CAACS,KAHd;MAIE,WAAW,EAAET,IAAI,CAACU;IAJpB,GAKOV,IAAI,CAACQ,EALZ;MAAA;MAAA;MAAA;IAAA,QADD,CAPH;EAAA,gBADF;AAmBD;;GA9BQb,S;UACOJ,W,EAIGA,W;;;KALVI,S;AAgCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}